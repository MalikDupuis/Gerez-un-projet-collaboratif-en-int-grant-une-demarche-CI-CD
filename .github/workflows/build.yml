name: Build

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest

    services:
      sonarqube:
        image: sonarqube:lts
        ports:
          - 9000:9000
        options: >-
          --health-cmd "curl -f http://localhost:9000/api/system/status || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10
        env:
          SONAR_ES_BOOTSTRAP_CHECKS_DISABLE: true

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'zulu'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Wait for SonarQube to be ready
        run: |
          echo "Waiting for SonarQube to start..."
          for i in {1..60}; do
            if curl -s http://localhost:9000/api/system/status | grep '"status":"UP"'; then
              echo "SonarQube is up!"
              break
            fi
            echo "Waiting..."
            sleep 5
          done
          curl -s http://localhost:9000/api/system/status || exit 1

      - name: Build and analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "http://localhost:9000"
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=sdvdgvds -Dsonar.projectName='sdvdgvds'
        working-directory: back
